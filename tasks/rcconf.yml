---
- name: "Rcconf: Configure hostname in /etc/rc.conf"
  tags: fm-rcconf-hostname
  notify: set hostname
  ansible.builtin.lineinfile:
    dest: /etc/rc.conf
    regexp: ^\s*{{ item.regexp }}\s*=(.*)$
    line: '{{ item.regexp }}="{{ item.value }}"'
    backup: "{{ fm_backup_conf }}"
  loop:
    - { regexp: hostname, value: "{{ rc_conf_hostname }}" }

- name: "Rcconf: Disable sendmail in /etc/rc.conf"
  tags: fm-rcconf-sendmail
  notify: stop sendmail
  ansible.builtin.lineinfile:
    dest: /etc/rc.conf
    regexp: ^\s*{{ item.regexp }}\s*=(.*)$
    line: '{{ item.regexp }}="{{ item.value }}"'
    backup: "{{ fm_backup_conf }}"
  loop:
    - { regexp: sendmail_enable, value: NONE }
    - { regexp: sendmail_submit_enable, value: "NO" }
    - { regexp: sendmail_outbound_enable, value: "NO" }
    - { regexp: sendmail_msp_queue_enable, value: "NO" }

- name: Postfix
  tags: fm-rcconf-postfix
  block:

    - name: "Rcconf: Configure Postfix"
      notify: reload postfix
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: '{{ item.regexp }}="{{ item.value }}"'
        backup: "{{ fm_backup_conf }}"
      loop: "{{ fm_postfix_rcconf }}"

    - name: "Rcconf: Enable and Start Postfix"
      when: fm_postfix_enable | bool
      notify:
        - postfix check
        - enable and start postfix
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: '{{ item.regexp }}="{{ item.value }}"'
        backup: "{{ fm_backup_conf }}"
      loop:
        - { regexp: postfix_enable, value: "YES" }

    - name: "Rcconf: Disable and Stop Postfix"
      when: not fm_postfix_enable | bool
      notify: disable and stop postfix
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: '{{ item.regexp }}="{{ item.value }}"'
        backup: "{{ fm_backup_conf }}"
      loop:
        - { regexp: postfix_enable, value: "NO" }

- name: Dovecot
  tags: fm-rcconf-dovecot
  block:

    - name: "Rcconf: Configure Dovecot"
      notify: reload dovecot
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: '{{ item.regexp }}="{{ item.value }}"'
        backup: "{{ fm_backup_conf }}"
      loop: "{{ fm_dovecot_rcconf }}"

    - name: "Rcconf: Enable and Start Dovecot"
      when: fm_dovecot_enable | bool
      notify: enable and start dovecot
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: '{{ item.regexp }}="{{ item.value }}"'
        backup: "{{ fm_backup_conf }}"
      loop:
        - { regexp: dovecot_enable, value: "YES" }

    - name: "Rcconf: Disable and Stop Dovecot"
      when: not fm_dovecot_enable | bool
      notify: disable and stop dovecot
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: '{{ item.regexp }}="{{ item.value }}"'
        backup: "{{ fm_backup_conf }}"
      loop:
        - { regexp: dovecot_enable, value: "NO" }

- name: DKIM
  tags: fm-rcconf-dkim
  block:

    - name: "Rcconf: Configure DKIM"
      notify: reload dkim
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: '{{ item.regexp }}="{{ item.value }}"'
        backup: "{{ fm_backup_conf }}"
      loop: "{{ fm_dkim_rcconf }}"

    - name: "Rcconf: Enable and Start DKIM"
      when: fm_dkim_enable | bool
      notify: enable and start dkim
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: '{{ item.regexp }}="{{ item.value }}"'
        backup: "{{ fm_backup_conf }}"
      loop:
        - { regexp: milteropendkim_enable, value: "YES" }

    - name: "Rcconf: Disable and Stop DKIM"
      when: not fm_dkim_enable | bool
      notify: disable and stop dkim
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: '{{ item.regexp }}="{{ item.value }}"'
        backup: "{{ fm_backup_conf }}"
      loop:
        - { regexp: milteropendkim_enable, value: "NO" }

# EOF
