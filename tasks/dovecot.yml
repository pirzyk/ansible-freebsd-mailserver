---
- name: Copy example-conf files to /usr/local/etc/dovecot/
  tags: dovecot_conf_example
  block:

    - name: "Dovecot: Stat example-config files"
      register: config_results
      ansible.builtin.find:
        paths: /usr/local/etc/dovecot/example-config
        file_type: file

    - name: "Dovecot: Debug example-config files fm_debug={{ fm_debug }}"
      when: fm_debug | bool
      ansible.builtin.debug:
        var: config_results

    - name: "Dovecot: Copy example-config files to /usr/local/etc/dovecot/"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/usr/local/etc/dovecot"
        backup: "{{ fm_backup_conf }}"
        remote_src: true
        mode: preserve
        force: "{{ dovecot_conf_example_recreate | bool }}"
      loop: "{{ config_results.files | map(attribute='path') }}"

    - name: "Dovecot: Stat example-config/conf.d files"
      register: confd_results
      ansible.builtin.find:
        paths: /usr/local/etc/dovecot/example-config/conf.d
        file_type: file

    - name: "Dovecot: Debug example-config/conf.d files fm_debug={{ fm_debug }}"
      when: fm_debug | bool
      ansible.builtin.debug:
        var: confd_results

    - name: "Dovecot: Copy example-config/conf.d files to /usr/local/etc/dovecot/conf.d/"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/usr/local/etc/dovecot/conf.d"
        backup: "{{ fm_backup_conf }}"
        remote_src: true
        mode: preserve
        force: "{{ dovecot_conf_example_recreate | bool }}"
      loop: "{{ confd_results.files | map(attribute='path') }}"

- name: "Dovecot: Configure {{ dovecot_conf_path }}"
  tags: dovecot_conf
  notify: reload dovecot
  ansible.builtin.lineinfile:
    dest: "{{ dovecot_conf_path }}"
    backup: "{{ fm_backup_conf }}"
    regexp: ^\s*{{ item.regexp }}\s*=(.*)$
    line: "{{ item.regexp }} = {{ item.value }}"
  loop: "{{ dovecot_conf }}"

- name: Directory /var/run/dovecot
  when: dovecot_conf_link | bool
  tags: dovecot_conf_link
  block:

    - name: "Dovecot: Create {{ dovecot_conf_link_dir }}"
      ansible.builtin.file:
        state: directory
        dest: "{{ dovecot_conf_link_dir }}"
        mode: "0755"

    - name: "Dovecot: Link {{ dovecot_conf_path ~ ' to ' ~ dovecot_conf_link_path }}"
      ansible.builtin.file:
        state: link
        src: "{{ dovecot_conf_path }}"
        dest: "{{ dovecot_conf_link_path }}"

- name: Create dh.pem
  tags: dovecot_ssl_dh
  block:

    - name: "Dovecot: Copy {{ dovecot_ssl_dh_custom_path ~ ' to ' ~ dovecot_ssl_dh }}"
      when: dovecot_ssl_dh_custom | bool
      ansible.builtin.copy:
        src: "{{ dovecot_ssl_dh_custom_path }}"
        dest: "{{ dovecot_ssl_dh }}"
        backup: "{{ fm_backup_conf }}"
        owner: root
        group: wheel
        mode: "0644"

    - name: >-
        Dovecot: Generate Diffie-Hellman by command {{ dovecot_ssl_dh_cmd }}.
        ***This is going to take a long time***.
      when: dovecot_ssl_dh_cmd_generate | bool
      ansible.builtin.command: # noqa: name[template]
        cmd: "{{ dovecot_ssl_dh_cmd }}"
        creates: "{{ dovecot_ssl_dh }}"

    - name: >-
        Dovecot: Generate OpenSSL Diffie-Hellman Parameters by openssl_dhparam.
        ***This is going to take a long time***. # noqa: name[template]
      when: dovecot_ssl_dh_generate | bool
      community.crypto.openssl_dhparam:
        path: "{{ dovecot_ssl_dh }}"
        size: "{{ dovecot_ssl_dh_bits }}"
        owner: root
        group: wheel
        mode: "0644"
    - name: "Dovecot: Copy {{ dovecot_ssl_dh_path ~ ' to ' ~ dovecot_ssl_dh }}"
      when:
        - not dovecot_ssl_dh_custom | bool
        - not dovecot_ssl_dh_cmd_generate | bool
        - not dovecot_ssl_dh_generate | bool
      ansible.builtin.copy:
        src: "{{ dovecot_ssl_dh_path }}"
        dest: "{{ dovecot_ssl_dh }}"
        backup: "{{ fm_backup_conf }}"
        owner: root
        group: wheel
        mode: "0644"

- name: Configure /usr/local/etc/dovecot/conf.d/*
  when: not dovecot_confd_legacy | bool
  tags: dovecot_confd
  notify: reload dovecot
  block:

    - name: "Dovecot: Configure blocks in /usr/local/etc/dovecot/conf.d/*"
      ansible.builtin.blockinfile:
        dest: /usr/local/etc/dovecot/conf.d/{{ item.0.key }}.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.1.insertafter }}"
        insertafter: "{{ item.1.insertafter }}"
        block: "{{ item.1.block }}"
        backup: "{{ fm_backup_conf }}"
      loop: "{{ dovecot_confd_blocks | dict2items | subelements('value') }}"
      loop_control:
        label: "{{ item.0.key }}.conf {{ item.1.insertafter }}"

    - name: "Dovecot: Configure lines in /usr/local/etc/dovecot/conf.d/*"
      ansible.builtin.lineinfile:
        dest: /usr/local/etc/dovecot/conf.d/{{ item.0.key }}.conf
        regexp: ^\s*{{ item.1.regexp }}\s*=(.*)$
        line: "{{ item.1.regexp }} = {{ item.1.value }}"
        backup: "{{ fm_backup_conf }}"
      loop: "{{ dovecot_confd_lines | dict2items | subelements('value') }}"
      loop_control:
        label: "{{ item.0.key }}.conf {{ item.1.regexp }} = {{ item.1.value }}"

- name: Legacy configure /usr/local/etc/dovecot/conf.d/*
  when: dovecot_confd_legacy | bool
  tags: dovecot_confd_legacy
  notify: reload dovecot
  block:

    - name: "Dovecot: Configure /usr/local/etc/dovecot/conf.d/10-master.conf"
      tags: dovecot_master_conf
      ansible.builtin.blockinfile:
        dest: /usr/local/etc/dovecot/conf.d/10-master.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.insertafter }}"
        insertafter: "{{ item.insertafter }}"
        block: "{{ item.block }}"
        backup: "{{ fm_backup_conf }}"
      loop: "{{ dovecot_master_conf }}"
      loop_control:
        label: "{{ item.insertafter }}"

    - name: "Dovecot: Configure /usr/local/etc/dovecot/conf.d/10-ssl.conf"
      tags: dovecot_ssl_conf
      ansible.builtin.lineinfile:
        dest: /usr/local/etc/dovecot/conf.d/10-ssl.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: "{{ item.regexp }} = {{ item.value }}"
        backup: "{{ fm_backup_conf }}"
      loop: "{{ dovecot_ssl_conf }}"

    - name: "Dovecot: Configure /usr/local/etc/dovecot/conf.d/10-mail.conf"
      tags: dovecot_mail_conf
      ansible.builtin.lineinfile:
        dest: /usr/local/etc/dovecot/conf.d/10-mail.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: "{{ item.regexp }} = {{ item.value }}"
        backup: "{{ fm_backup_conf }}"
      loop: "{{ dovecot_mail_conf }}"

    - name: "Dovecot: Configure /usr/local/etc/dovecot/conf.d/10-auth.conf"
      tags: dovecot_auth_conf
      ansible.builtin.lineinfile:
        dest: /usr/local/etc/dovecot/conf.d/10-auth.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: "{{ item.regexp }} = {{ item.value }}"
        backup: "{{ fm_backup_conf }}"
      loop: "{{ dovecot_auth_conf }}"

    - name: "Dovecot: Configure /usr/local/etc/dovecot/conf.d/10-logging.conf"
      tags: dovecot_logging_conf
      ansible.builtin.lineinfile:
        dest: /usr/local/etc/dovecot/conf.d/10-logging.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: "{{ item.regexp }} = {{ item.value }}"
        backup: "{{ fm_backup_conf }}"
      loop: "{{ dovecot_logging_conf }}"

    - name: "Dovecot: Configure /usr/local/etc/dovecot/conf.d/15-lda.conf"
      tags: dovecot_lda_conf
      ansible.builtin.lineinfile:
        dest: /usr/local/etc/dovecot/conf.d/15-lda.conf
        regexp: ^\s*{{ item.regexp }}\s*=(.*)$
        line: "{{ item.regexp }} = {{ item.value }}"
        insertafter: protocol lda {
        backup: "{{ fm_backup_conf }}"
      loop: "{{ dovecot_lda_conf }}"

    # - name: Configure /usr/local/etc/dovecot/conf.d/15-mailboxes.conf
    #   tags: config_dovecot_mailboxes
    #   lineinfile:
    #     dest: /usr/local/etc/dovecot/conf.d/15-mailboxes.conf
    #     regexp: '^\s*{{ item.regexp }}\s*=(.*)$'
    #     line: "{{ item.regexp }} = {{ item.value }}"
    #     backup: "{{ fm_backup_conf }}"
    #   loop:
    #     - { regexp: "^",  value: ""}

# EOF
